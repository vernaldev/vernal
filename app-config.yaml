app:
  title: Vernal
  baseUrl: http://localhost:3000

organization:
  name: Vernal

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/auth/service-to-service-auth for
  # information on the format
  # auth:
  #   keys:
  #     - secret: ${BACKEND_SECRET}
  baseUrl: http://localhost:7007
  listen:
    port: 7007
    # Uncomment the following host directive to bind to specific interfaces
    # host: 127.0.0.1
  csp:
    frame-src:
    - http://localhost:4008
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  database:
    # config options: https://node-postgres.com/apis/client
    client: better-sqlite3
    connection: ':memory:'
    # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

# Lighthouse config
lighthouse:
  baseUrl: http://localhost:4008 #lighthouse-audit-service URL
  # lighthouse backend automatic scheduler config
  schedule:
    frequency:
      hours: 12 # Default: 1 day
      # minutes: 1 # UNCOMMENT FOR DEMO
    timeout:
      minutes: 30 # Default: 10 minutes

integrations:
  github:
  - host: github.com
    apps:
    - $include: github-app-vernal-dev-credentials.yaml

proxy: {}
### Example for how to add a proxy endpoint for the frontend.
### A typical reason to do this is to handle HTTPS and CORS for internal services.
# endpoints:
#   '/test':
#     target: 'https://example.com'
#     changeOrigin: true

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'local' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

auth:
  # see https://backstage.io/docs/auth/ to learn about auth providers
  providers:
    keycloak:
      development:
        metadataUrl: https://sso.local.lan.vernal.dev/realms/vernal/.well-known/openid-configuration
        prompt: login

scaffolder:
  defaultAuthor:
    name: Vernal
    email: noreply@vernal.dev
  defaultCommitMessage: Initial commit.
# see https://backstage.io/docs/features/software-templates/configuration for software template options

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
  - allow: [Component, System, API, Resource, Location]
  locations:
  # Local example data, file locations are relative to the backend process, typically `packages/backend`
  # in catalog (all components)
  - type: file
    target: ../../examples/entities.yaml

  - type: file
    target: ../../templates/nextjs-express.yaml
    rules:
    - allow: [Template]

  - type: file
    target: ../../templates/nextjs-fastapi.yaml
    rules:
    - allow: [Template]

  - type: file
    target: ../../templates/nextjs-apollo.yaml
    rules:
    - allow: [Template]

  - type: file
    target: ../../templates/nextjs-typegraphql.yaml
    rules:
    - allow: [Template]

  # Local example organizational data (for entities)
  - type: file
    target: ../../examples/org.yaml
    rules:
    - allow: [User, Group]

  # # Uncomment these lines to add more example data
  # - type: url
  #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all.yaml

# # Uncomment these lines to add an example org
# - type: url
#   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme-corp.yaml
#   rules:
#     - allow: [User, Group]
